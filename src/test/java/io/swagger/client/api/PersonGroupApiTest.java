/*
 * facial recognition api
 * # Introducão  Seja bem-vindo a documentação da API de Reconhecimento Facial da [HIMNI.COM](https://himni.com)   Nossa API foi criada utilizando o padrão [REST](https://restfulapi.net/) e [HATEOAS](https://restfulapi.net/hateoas/), possibilitando a integração de seu sistema ao nosso, e está documentada abaixo.  # Como usar a API?  Logo a seguir você encontrará todos os recursos e métodos suportados pela API, sendo que essa página possibilita que você teste os recursos e métodos diretamente através dela.  # Autenticação  Você precisa de um [HTTP BEARER TOKEN](https://oauth.net/2/bearer-tokens/) para identificar a conta que está realizando solicitações para a API. Você pode obter seu token de autenticação no seu [Painel do Cliente](https://face.himni.com.br/).  Insira seu token no campo que se encontra topo desta página para testar os métodos da API.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.PersonGroupCreate;
import io.swagger.client.model.PersonGroupCreateRequest;
import io.swagger.client.model.PersonGroupUpdate;
import io.swagger.client.model.PersonGroupUpdateRequest;
import io.swagger.client.model.PersonGroupsList;
import io.swagger.client.model.PersonGroupsView;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PersonGroupApi
 */
@Ignore
public class PersonGroupApiTest {

    private final PersonGroupApi api = new PersonGroupApi();

    /**
     * Person Group - Create
     *
     * Cria um novo grupo de pessoas com nome e metadados especificados pelo usuário.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void personGroupCreateTest() throws ApiException {
        PersonGroupCreateRequest body = null;
        PersonGroupCreate response = api.personGroupCreate(body);

        // TODO: test validations
    }
    /**
     * Person Group - Delete
     *
     * Exclui um grupo de pessoas existente. Todos as informações persistidas neste grupo de pessoas, incluindo as pessoas e os modelos de reconhecimento facial serão excluídos.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void personGroupDeleteTest() throws ApiException {
        String personGroupUuid = null;
        api.personGroupDelete(personGroupUuid);

        // TODO: test validations
    }
    /**
     * Person Group - List
     *
     * Retorna uma listagem de todos os grupos de pessoas existentes contendo UUID, nome, metadados e quantidade de entidades cadastradas.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void personGroupListTest() throws ApiException {
        List<PersonGroupsList> response = api.personGroupList();

        // TODO: test validations
    }
    /**
     * Person Group - Update
     *
     * Atualiza o nome e metadados de um grupo de pessoas existente. As propriedades que estiverem ausentes do corpo da requisição não serão alteradas.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void personGroupUpdateTest() throws ApiException {
        PersonGroupUpdateRequest body = null;
        String personGroupUuid = null;
        PersonGroupUpdate response = api.personGroupUpdate(body, personGroupUuid);

        // TODO: test validations
    }
    /**
     * Person Group - View
     *
     * Retorna as informações de um grupo de pessoas, incluindo nome, metadados, UUID e quantidade de entidades cadastradas. Este endpoint retorna apenas os dados do grupo de pessoas, para obter a lista de pessoas neste grupo utilize o endpoint Person - List.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void personGroupViewTest() throws ApiException {
        String personGroupUuid = null;
        PersonGroupsView response = api.personGroupView(personGroupUuid);

        // TODO: test validations
    }
}
